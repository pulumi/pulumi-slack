// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.slack.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUsergroupArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUsergroupArgs Empty = new GetUsergroupArgs();

    /**
     * The name of the usergroup
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the usergroup
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The id of the usergroup
     * 
     * The data source expects exactly one of these fields, you can&#39;t set both.
     * 
     */
    @Import(name="usergroupId")
    private @Nullable Output<String> usergroupId;

    /**
     * @return The id of the usergroup
     * 
     * The data source expects exactly one of these fields, you can&#39;t set both.
     * 
     */
    public Optional<Output<String>> usergroupId() {
        return Optional.ofNullable(this.usergroupId);
    }

    private GetUsergroupArgs() {}

    private GetUsergroupArgs(GetUsergroupArgs $) {
        this.name = $.name;
        this.usergroupId = $.usergroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUsergroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUsergroupArgs $;

        public Builder() {
            $ = new GetUsergroupArgs();
        }

        public Builder(GetUsergroupArgs defaults) {
            $ = new GetUsergroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the usergroup
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the usergroup
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param usergroupId The id of the usergroup
         * 
         * The data source expects exactly one of these fields, you can&#39;t set both.
         * 
         * @return builder
         * 
         */
        public Builder usergroupId(@Nullable Output<String> usergroupId) {
            $.usergroupId = usergroupId;
            return this;
        }

        /**
         * @param usergroupId The id of the usergroup
         * 
         * The data source expects exactly one of these fields, you can&#39;t set both.
         * 
         * @return builder
         * 
         */
        public Builder usergroupId(String usergroupId) {
            return usergroupId(Output.of(usergroupId));
        }

        public GetUsergroupArgs build() {
            return $;
        }
    }

}
